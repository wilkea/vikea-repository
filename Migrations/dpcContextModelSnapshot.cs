// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dpcleague_2.Data;

#nullable disable

namespace dpcleague_2.Migrations
{
    [DbContext(typeof(dpcContext))]
    partial class dpcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dpcleague_2.Models.Bilet", b =>
                {
                    b.Property<int>("BiletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BiletId"));

                    b.Property<DateTime>("DataProcurarii")
                        .HasColumnType("datetime2");

                    b.Property<int>("EvenimentId")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BiletId");

                    b.HasIndex("EvenimentId");

                    b.ToTable("Bilets", (string)null);
                });

            modelBuilder.Entity("dpcleague_2.Models.Eveniment", b =>
                {
                    b.Property<int>("EvenimentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvenimentId"));

                    b.Property<DateTime>("DataInceput")
                        .HasColumnType("datetime2");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Locatia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("EvenimentId");

                    b.ToTable("Eveniments", (string)null);
                });

            modelBuilder.Entity("dpcleague_2.Models.Organizatie", b =>
                {
                    b.Property<int>("OrganizatieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizatieId"));

                    b.Property<DateTime>("DataCrearii")
                        .HasColumnType("datetime2");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Originea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OrganizatieId");

                    b.ToTable("Organizaties", (string)null);
                });

            modelBuilder.Entity("dpcleague_2.Models.Roster", b =>
                {
                    b.Property<int>("RosterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RosterId"));

                    b.Property<DateTime>("DataFormare")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizatieId")
                        .HasColumnType("int");

                    b.HasKey("RosterId");

                    b.HasIndex("OrganizatieId");

                    b.ToTable("Rosters", (string)null);
                });

            modelBuilder.Entity("dpcleague_2.Models.RosterEveniment", b =>
                {
                    b.Property<int>("RosterEvenimentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RosterEvenimentId"));

                    b.Property<int>("EvenimentId")
                        .HasColumnType("int");

                    b.Property<int>("RosterId")
                        .HasColumnType("int");

                    b.HasKey("RosterEvenimentId");

                    b.HasIndex("EvenimentId");

                    b.HasIndex("RosterId");

                    b.ToTable("RosterEveniments", (string)null);
                });

            modelBuilder.Entity("dpcleague_2.Models.RosterSportiv", b =>
                {
                    b.Property<int>("RosterSportivId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RosterSportivId"));

                    b.Property<int>("RosterId")
                        .HasColumnType("int");

                    b.Property<int>("SportivId")
                        .HasColumnType("int");

                    b.HasKey("RosterSportivId");

                    b.HasIndex("RosterId");

                    b.HasIndex("SportivId");

                    b.ToTable("RosterSportivs", (string)null);
                });

            modelBuilder.Entity("dpcleague_2.Models.Sportiv", b =>
                {
                    b.Property<int>("SportivId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SportivId"));

                    b.Property<DateTime>("DataNasterii")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrganizatieId")
                        .HasColumnType("int");

                    b.Property<string>("Porecla")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SportivId");

                    b.HasIndex("OrganizatieId");

                    b.ToTable("Sportivs", (string)null);
                });

            modelBuilder.Entity("dpcleague_2.Models.Bilet", b =>
                {
                    b.HasOne("dpcleague_2.Models.Eveniment", "Eveniment")
                        .WithMany("Bilets")
                        .HasForeignKey("EvenimentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Eveniment");
                });

            modelBuilder.Entity("dpcleague_2.Models.Roster", b =>
                {
                    b.HasOne("dpcleague_2.Models.Organizatie", "Organizatie")
                        .WithMany("Rostere")
                        .HasForeignKey("OrganizatieId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organizatie");
                });

            modelBuilder.Entity("dpcleague_2.Models.RosterEveniment", b =>
                {
                    b.HasOne("dpcleague_2.Models.Eveniment", "Eveniment")
                        .WithMany("RosterEvenimente")
                        .HasForeignKey("EvenimentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("dpcleague_2.Models.Roster", "Roster")
                        .WithMany("RosterEvenimente")
                        .HasForeignKey("RosterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Eveniment");

                    b.Navigation("Roster");
                });

            modelBuilder.Entity("dpcleague_2.Models.RosterSportiv", b =>
                {
                    b.HasOne("dpcleague_2.Models.Roster", "Roster")
                        .WithMany("RosterSportivi")
                        .HasForeignKey("RosterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("dpcleague_2.Models.Sportiv", "Sportiv")
                        .WithMany("RosterSportivi")
                        .HasForeignKey("SportivId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roster");

                    b.Navigation("Sportiv");
                });

            modelBuilder.Entity("dpcleague_2.Models.Sportiv", b =>
                {
                    b.HasOne("dpcleague_2.Models.Organizatie", "Organizatie")
                        .WithMany("Sportivi")
                        .HasForeignKey("OrganizatieId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organizatie");
                });

            modelBuilder.Entity("dpcleague_2.Models.Eveniment", b =>
                {
                    b.Navigation("Bilets");

                    b.Navigation("RosterEvenimente");
                });

            modelBuilder.Entity("dpcleague_2.Models.Organizatie", b =>
                {
                    b.Navigation("Rostere");

                    b.Navigation("Sportivi");
                });

            modelBuilder.Entity("dpcleague_2.Models.Roster", b =>
                {
                    b.Navigation("RosterEvenimente");

                    b.Navigation("RosterSportivi");
                });

            modelBuilder.Entity("dpcleague_2.Models.Sportiv", b =>
                {
                    b.Navigation("RosterSportivi");
                });
#pragma warning restore 612, 618
        }
    }
}
